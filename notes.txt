create or replace PROCEDURE AE_CREATE_EMP_WADS 
    (emp_uid IN number, p_status OUT NUMBER)

AS

BEGIN

--Assume Success Initially
p_status := 1;


BEGIN

--CREATE missing WADs for hours
MERGE INTO AEGIS_WAD_HOURS_FMS d
    USING(
    SELECT 
    e.EMPLOYEE_UID, e.FIRST_NAME, e.LAST_NAME, p.TPS_TA_SUPV_UID, p.TPS_TA, p.MANAGING_SPONSOR, p.FUNDING_SPONSOR,
    p.COM, p.FUNDING_BUCKET, p.TPS_ID, p.SUPERVISOR, e.SUPERVISOR_UID, e.CHARGING_TASK_AREA
    FROM EMPLOYEE e
    LEFT OUTER JOIN AEGIS_PLANNED_HOURS_FMS p
    ON e.PSUPV_UID = P.SUPERVISOR_UID
    WHERE e.EMPLOYEE_UID = emp_uid AND p.FISCAL_YEAR = 2025) s

    ON (d.EMPLOYEE_UID = s.EMPLOYEE_UID
        AND d.TPS_TA_SUPV_UID = s.TPS_TA_SUPV_UID)

WHEN NOT MATCHED THEN INSERT(
    d.EMPLOYEE_UID, d.FIRST_NAME, d.LAST_NAME, d.TPS_TA_SUPV_UID, d.TPS_TA, d.MANAGING_SPONSOR, d.FUNDING_SPONSOR,
    d.COM, d.FUNDING_BUCKET, d.TPS_ID, d.SUPERVISOR, d.SUPERVISOR_UID, d.TASK_AREA,
    d.OCT, d.NOV, d.DEC, d.JAN, d.FEB, d.MAR, d.APR, d.MAY, d.JUN, d.JUL, d.AUG, d.SEP, d.OCT_X,
    d.HIDE, d.FISCAL_YEAR, d.SPECIAL, d.TOTAL)
VALUES(
    s.EMPLOYEE_UID, s.FIRST_NAME, s.LAST_NAME, s.TPS_TA_SUPV_UID, s.TPS_TA, s.MANAGING_SPONSOR, s.FUNDING_SPONSOR,
    s.COM, s.FUNDING_BUCKET, s.TPS_ID, s.SUPERVISOR, s.SUPERVISOR_UID, s.CHARGING_TASK_AREA,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 2025, 0, 0);
    
COMMIT;


--CREATE missing WADs for costs
MERGE INTO AEGIS_WAD_COSTS_FMS d
    USING(
    SELECT 
    e.EMPLOYEE_UID, e.FIRST_NAME, e.LAST_NAME, p.TPS_TA_SUPV_UID, p.TPS_TA, p.MANAGING_SPONSOR, p.FUNDING_SPONSOR,
    p.COM, p.FUNDING_BUCKET, p.TPS_ID, p.SUPERVISOR, e.SUPERVISOR_UID, e.CHARGING_TASK_AREA
    FROM EMPLOYEE e
    LEFT OUTER JOIN AEGIS_PLANNED_HOURS_FMS p
    ON e.PSUPV_UID = P.SUPERVISOR_UID
    WHERE e.EMPLOYEE_UID = emp_uid AND p.FISCAL_YEAR = 2025) s

    ON (d.EMPLOYEE_UID = s.EMPLOYEE_UID
        AND d.TPS_TA_SUPV_UID = s.TPS_TA_SUPV_UID)

WHEN NOT MATCHED THEN INSERT(
    d.EMPLOYEE_UID, d.FIRST_NAME, d.LAST_NAME, d.TPS_TA_SUPV_UID, d.TPS_TA, d.MANAGING_SPONSOR, d.FUNDING_SPONSOR,
    d.COM, d.FUNDING_BUCKET, d.TPS_ID, d.SUPERVISOR, d.SUPERVISOR_UID, d.TASK_AREA,
    d.OCT, d.NOV, d.DEC, d.JAN, d.FEB, d.MAR, d.APR, d.MAY, d.JUN, d.JUL, d.AUG, d.SEP, d.OCT_X,
    d.HIDE, d.FISCAL_YEAR, d.SPECIAL, d.TOTAL)
VALUES(
    s.EMPLOYEE_UID, s.FIRST_NAME, s.LAST_NAME, s.TPS_TA_SUPV_UID, s.TPS_TA, s.MANAGING_SPONSOR, s.FUNDING_SPONSOR,
    s.COM, s.FUNDING_BUCKET, s.TPS_ID, s.SUPERVISOR, s.SUPERVISOR_UID, s.CHARGING_TASK_AREA,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 2025, 0, 0);
    
COMMIT;

--CREATE missing WADs for burdened costs
MERGE INTO AEGIS_WAD_BURDENED_COSTS_FMS d
    USING(
    SELECT 
    e.EMPLOYEE_UID, e.FIRST_NAME, e.LAST_NAME, p.TPS_TA_SUPV_UID, p.TPS_TA, p.MANAGING_SPONSOR, p.FUNDING_SPONSOR,
    p.COM, p.FUNDING_BUCKET, p.TPS_ID, p.SUPERVISOR, e.SUPERVISOR_UID, e.CHARGING_TASK_AREA
    FROM EMPLOYEE e
    LEFT OUTER JOIN AEGIS_PLANNED_HOURS_FMS p
    ON e.PSUPV_UID = P.SUPERVISOR_UID
    WHERE e.EMPLOYEE_UID = emp_uid AND p.FISCAL_YEAR = 2025) s

    ON (d.EMPLOYEE_UID = s.EMPLOYEE_UID
        AND d.TPS_TA_SUPV_UID = s.TPS_TA_SUPV_UID)

WHEN NOT MATCHED THEN INSERT(
    d.EMPLOYEE_UID, d.FIRST_NAME, d.LAST_NAME, d.TPS_TA_SUPV_UID, d.TPS_TA, d.MANAGING_SPONSOR, d.FUNDING_SPONSOR,
    d.COM, d.FUNDING_BUCKET, d.TPS_ID, d.SUPERVISOR, d.SUPERVISOR_UID, d.TASK_AREA,
    d.OCT, d.NOV, d.DEC, d.JAN, d.FEB, d.MAR, d.APR, d.MAY, d.JUN, d.JUL, d.AUG, d.SEP, d.OCT_X,
    d.HIDE, d.FISCAL_YEAR, d.SPECIAL, d.TOTAL)
VALUES(
    s.EMPLOYEE_UID, s.FIRST_NAME, s.LAST_NAME, s.TPS_TA_SUPV_UID, s.TPS_TA, s.MANAGING_SPONSOR, s.FUNDING_SPONSOR,
    s.COM, s.FUNDING_BUCKET, s.TPS_ID, s.SUPERVISOR, s.SUPERVISOR_UID, s.CHARGING_TASK_AREA,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 2025, 0, 0);

COMMIT;

--CREATE missing WADs for base costs
MERGE INTO AEGIS_WAD_COSTS_BASE_FMS d
    USING(
    SELECT 
    e.EMPLOYEE_UID, e.FIRST_NAME, e.LAST_NAME, p.TPS_TA_SUPV_UID, p.TPS_TA, p.MANAGING_SPONSOR, p.FUNDING_SPONSOR,
    p.COM, p.FUNDING_BUCKET, p.TPS_ID, p.SUPERVISOR, e.SUPERVISOR_UID, e.CHARGING_TASK_AREA
    FROM EMPLOYEE e
    LEFT OUTER JOIN AEGIS_PLANNED_HOURS_FMS p
    ON e.PSUPV_UID = P.SUPERVISOR_UID
    WHERE e.EMPLOYEE_UID = emp_uid AND p.FISCAL_YEAR = 2025) s

    ON (d.EMPLOYEE_UID = s.EMPLOYEE_UID
        AND d.TPS_TA_SUPV_UID = s.TPS_TA_SUPV_UID)

WHEN NOT MATCHED THEN INSERT(
    d.EMPLOYEE_UID, d.FIRST_NAME, d.LAST_NAME, d.TPS_TA_SUPV_UID, d.TPS_TA, d.MANAGING_SPONSOR, d.FUNDING_SPONSOR,
    d.COM, d.FUNDING_BUCKET, d.TPS_ID, d.SUPERVISOR, d.SUPERVISOR_UID, d.TASK_AREA,
    d.OCT, d.NOV, d.DEC, d.JAN, d.FEB, d.MAR, d.APR, d.MAY, d.JUN, d.JUL, d.AUG, d.SEP, d.OCT_X,
    d.HIDE, d.FISCAL_YEAR, d.SPECIAL, d.TOTAL)
VALUES(
    s.EMPLOYEE_UID, s.FIRST_NAME, s.LAST_NAME, s.TPS_TA_SUPV_UID, s.TPS_TA, s.MANAGING_SPONSOR, s.FUNDING_SPONSOR,
    s.COM, s.FUNDING_BUCKET, s.TPS_ID, s.SUPERVISOR, s.SUPERVISOR_UID, s.CHARGING_TASK_AREA,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 2025, 0, 0);

COMMIT;


EXCEPTION
    WHEN OTHERS THEN
    --If an error occurs, set the status to 0
    p_status := 0;
    -- log the error.
    --err_code := SQLCODE;
    --err_msg := SUBSTR(SQLERRM, 1, 200);
    --INSERT INTO ERR_LOGS(PROCEDURE_NAME, ERROR_MESSAGE)
    --VALUES('AE_CREATE_EMP_WADS', err_code || ' - ' || error_message);
    -- Optionally rollback any changes
    ROLLBACK;
END;

END AE_CREATE_EMP_WADS;